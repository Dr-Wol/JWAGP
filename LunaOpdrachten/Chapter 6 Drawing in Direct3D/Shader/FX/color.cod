//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 gWorldViewProj;            // Offset:    0, size:   64
    float   gTime;                      // Offset:   64, size:    4
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 ColorTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorldViewProj;           // Offset:    0 Size:    64
                //   float gTime;                       // Offset:   64 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_temps 2
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw
                dp4 r1.y, r0.xyzw, cb0[1].xyzw
                dp4 r1.z, r0.xyzw, cb0[2].xyzw
                dp4 r1.w, r0.xyzw, cb0[3].xyzw
                mov r0.xyzw, v1.xyzw
                mov o0.xyzw, r1.xyzw
                mov o1.xyzw, r0.xyzw
                ret 
                // Approximately 10 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorldViewProj;           // Offset:    0 Size:    64 [unused]
                //   float gTime;                       // Offset:   64 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer cb0[5], immediateIndexed
                dcl_input_ps_siv linear noperspective v0.xy, position
                dcl_output o0.xyzw
                dcl_temps 7
                mov r0.x, l(1024)
                mov r0.y, l(8.000000)
                itof r0.z, l(32)
                itof r0.w, l(1024)
                div r1.xy, v0.xyxx, l(1400.000000, 1400.000000, 0.000000, 0.000000)
                lt r1.z, r1.x, l(0.250000)
                if_nz r1.z
                  mov r1.xy, r1.xyxx
                  frc r1.z, cb0[4].x
                  mul r1.z, r1.z, l(0.070000)
                  add r1.zw, r1.zzzz, r1.xxxy
                  dp2 r1.z, r1.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                  sincos r1.z, null, r1.z
                  mul r1.z, r1.z, l(43758.546875)
                  frc r1.z, r1.z
                  mov r1.z, r1.z
                  mov r1.z, r1.z
                  mov r1.z, r1.z
                  mov r1.w, l(1)
                  mov r2.xy, l(0,0.250000,0,0)
                else 
                  lt r2.z, r1.x, l(0.500000)
                  if_nz r2.z
                    mov r1.xy, r1.xyxx
                    frc r2.z, cb0[4].x
                    mul r2.w, r2.z, l(0.070000)
                    add r3.xy, r1.xyxx, r2.wwww
                    dp2 r2.w, r3.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                    sincos r2.w, null, r2.w
                    mul r2.w, r2.w, l(43758.546875)
                    frc r2.w, r2.w
                    mov r2.w, r2.w
                    mul r2.z, r2.z, l(0.110000)
                    add r3.xy, r1.xyxx, r2.zzzz
                    dp2 r2.z, r3.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                    sincos r2.z, null, r2.z
                    mul r2.z, r2.z, l(43758.546875)
                    frc r2.z, r2.z
                    mov r2.z, r2.z
                    add r2.z, r2.z, r2.w
                    div r1.z, r2.z, l(2.000000)
                    mov r1.z, r1.z
                    mov r1.w, l(2)
                    mov r2.xy, l(0.250000,0.500000,0,0)
                  else 
                    lt r2.z, r1.x, l(0.750000)
                    if_nz r2.z
                      mov r1.xy, r1.xyxx
                      frc r2.z, cb0[4].x
                      mul r2.w, r2.z, l(0.070000)
                      add r3.xy, r1.xyxx, r2.wwww
                      dp2 r2.w, r3.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r2.w, null, r2.w
                      mul r2.w, r2.w, l(43758.546875)
                      frc r2.w, r2.w
                      mov r2.w, r2.w
                      mul r3.x, r2.z, l(0.110000)
                      add r3.xy, r1.xyxx, r3.xxxx
                      dp2 r3.x, r3.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r3.x, null, r3.x
                      mul r3.x, r3.x, l(43758.546875)
                      frc r3.x, r3.x
                      mov r3.x, r3.x
                      mul r3.y, r2.z, l(0.130000)
                      add r3.yz, r1.xxyx, r3.yyyy
                      dp2 r3.y, r3.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r3.y, null, r3.y
                      mul r3.y, r3.y, l(43758.546875)
                      frc r3.y, r3.y
                      mov r3.y, r3.y
                      mul r2.z, r2.z, l(0.170000)
                      add r3.zw, r1.xxxy, r2.zzzz
                      dp2 r2.z, r3.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r2.z, null, r2.z
                      mul r2.z, r2.z, l(43758.546875)
                      frc r2.z, r2.z
                      mov r2.z, r2.z
                      add r2.w, r2.w, r3.x
                      add r2.w, r3.y, r2.w
                      add r2.z, r2.z, r2.w
                      div r1.z, r2.z, l(4.000000)
                      mov r1.z, r1.z
                      mov r1.w, l(3)
                      mov r2.xy, l(0.500000,0.750000,0,0)
                    else 
                      mov r1.xy, r1.xyxx
                      frc r2.z, cb0[4].x
                      mul r2.w, r2.z, l(0.070000)
                      add r3.xy, r1.xyxx, r2.wwww
                      dp2 r2.w, r3.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r2.w, null, r2.w
                      mul r2.w, r2.w, l(43758.546875)
                      frc r2.w, r2.w
                      mov r2.w, r2.w
                      mul r3.x, r2.z, l(0.110000)
                      add r3.xy, r1.xyxx, r3.xxxx
                      dp2 r3.x, r3.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r3.x, null, r3.x
                      mul r3.x, r3.x, l(43758.546875)
                      frc r3.x, r3.x
                      mov r3.x, r3.x
                      mul r3.y, r2.z, l(0.130000)
                      add r3.yz, r1.xxyx, r3.yyyy
                      dp2 r3.y, r3.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r3.y, null, r3.y
                      mul r3.y, r3.y, l(43758.546875)
                      frc r3.y, r3.y
                      mov r3.y, r3.y
                      mul r3.z, r2.z, l(0.170000)
                      add r3.zw, r1.xxxy, r3.zzzz
                      dp2 r3.z, r3.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r3.z, null, r3.z
                      mul r3.z, r3.z, l(43758.546875)
                      frc r3.z, r3.z
                      mov r3.z, r3.z
                      mul r3.w, r2.z, l(0.190000)
                      add r4.xy, r1.xyxx, r3.wwww
                      dp2 r3.w, r4.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r3.w, null, r3.w
                      mul r3.w, r3.w, l(43758.546875)
                      frc r3.w, r3.w
                      mov r3.w, r3.w
                      mul r4.x, r2.z, l(0.230000)
                      add r4.xy, r1.xyxx, r4.xxxx
                      dp2 r4.x, r4.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r4.x, null, r4.x
                      mul r4.x, r4.x, l(43758.546875)
                      frc r4.x, r4.x
                      mov r4.x, r4.x
                      mul r4.y, r2.z, l(0.290000)
                      add r4.yz, r1.xxyx, r4.yyyy
                      dp2 r4.y, r4.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r4.y, null, r4.y
                      mul r4.y, r4.y, l(43758.546875)
                      frc r4.y, r4.y
                      mov r4.y, r4.y
                      mul r2.z, r2.z, l(0.310000)
                      add r4.zw, r1.xxxy, r2.zzzz
                      dp2 r2.z, r4.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r2.z, null, r2.z
                      mul r2.z, r2.z, l(43758.546875)
                      frc r2.z, r2.z
                      mov r2.z, r2.z
                      add r2.w, r2.w, r3.x
                      add r2.w, r3.y, r2.w
                      add r2.w, r3.z, r2.w
                      add r2.w, r3.w, r2.w
                      add r2.w, r4.x, r2.w
                      add r2.w, r4.y, r2.w
                      add r2.z, r2.z, r2.w
                      div r1.z, r2.z, l(8.000000)
                      mov r1.z, r1.z
                      mov r1.w, l(4)
                      mov r2.xy, l(0.750000,1.000000,0,0)
                    endif 
                  endif 
                endif 
                lt r2.z, r1.y, l(0.250000)
                if_nz r2.z
                  mov r1.w, r1.w
                  mov r3.xy, r1.xyxx
                  mov r2.xy, r2.xyxx
                  mov r2.z, l(0.250000)
                  mov r0.y, r0.y
                  mov r2.x, r2.x
                  mov r2.y, r2.y
                  mov r3.x, r3.x
                  mov r2.w, -r2.x
                  add r2.w, r2.w, r3.x
                  mov r2.x, -r2.x
                  add r2.x, r2.x, r2.y
                  div r2.x, r2.w, r2.x
                  max r2.x, r2.x, l(0.000000)
                  min r2.x, r2.x, l(1.000000)
                  mov r2.x, r2.x
                  mov r2.x, r2.x
                  mov r0.z, r0.z
                  mul r2.y, r0.z, r2.x
                  round_ni r2.y, r2.y
                  div r2.y, r2.y, r0.z
                  mov r0.z, r0.z
                  mul r2.x, r0.z, r2.x
                  round_ni r2.x, r2.x
                  div r2.x, r2.x, r0.z
                  div r0.z, l(1.000000), r0.z
                  add r0.z, r0.z, r2.x
                  mov r2.y, r2.y
                  mov r2.x, l(0)
                  mov r2.w, l(0)
                  mov r4.x, r2.x
                  mov r4.y, r2.w
                  loop 
                    ilt r4.z, r4.y, r0.x
                    breakc_z r4.z
                    itof r4.z, r4.y
                    div r4.z, r4.z, r0.w
                    ilt r4.w, r1.w, l(2)
                    if_nz r4.w
                      mov r3.z, l(0.500000)
                      add r5.xy, r3.xzxx, r4.zzzz
                      frc r3.z, cb0[4].x
                      mul r3.z, r3.z, l(0.070000)
                      add r5.xy, r3.zzzz, r5.xyxx
                      dp2 r3.z, r5.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                      sincos r3.z, null, r3.z
                      mul r3.z, r3.z, l(43758.546875)
                      frc r3.z, r3.z
                      mov r3.z, r3.z
                      mov r3.z, r3.z
                      mov r3.z, r3.z
                    else 
                      ilt r4.w, r1.w, l(3)
                      if_nz r4.w
                        mov r3.w, l(0.500000)
                        add r5.xy, r3.xwxx, r4.zzzz
                        frc r3.w, cb0[4].x
                        mul r4.w, r3.w, l(0.070000)
                        add r5.zw, r4.wwww, r5.xxxy
                        dp2 r4.w, r5.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                        sincos r4.w, null, r4.w
                        mul r4.w, r4.w, l(43758.546875)
                        frc r4.w, r4.w
                        mov r4.w, r4.w
                        mul r3.w, r3.w, l(0.110000)
                        add r5.xy, r3.wwww, r5.xyxx
                        dp2 r3.w, r5.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                        sincos r3.w, null, r3.w
                        mul r3.w, r3.w, l(43758.546875)
                        frc r3.w, r3.w
                        mov r3.w, r3.w
                        add r3.w, r3.w, r4.w
                        div r3.z, r3.w, l(2.000000)
                        mov r3.z, r3.z
                      else 
                        ilt r3.w, r1.w, l(4)
                        if_nz r3.w
                          mov r5.x, r3.x
                          mov r5.y, l(0.500000)
                          add r5.xy, r4.zzzz, r5.xyxx
                          frc r3.w, cb0[4].x
                          mul r4.w, r3.w, l(0.070000)
                          add r5.zw, r4.wwww, r5.xxxy
                          dp2 r4.w, r5.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r4.w, null, r4.w
                          mul r4.w, r4.w, l(43758.546875)
                          frc r4.w, r4.w
                          mov r4.w, r4.w
                          mul r5.z, r3.w, l(0.110000)
                          add r5.zw, r5.zzzz, r5.xxxy
                          dp2 r5.z, r5.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r5.z, null, r5.z
                          mul r5.z, r5.z, l(43758.546875)
                          frc r5.z, r5.z
                          mov r5.z, r5.z
                          mul r5.w, r3.w, l(0.130000)
                          add r6.xy, r5.wwww, r5.xyxx
                          dp2 r5.w, r6.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r5.w, null, r5.w
                          mul r5.w, r5.w, l(43758.546875)
                          frc r5.w, r5.w
                          mov r5.w, r5.w
                          mul r3.w, r3.w, l(0.170000)
                          add r5.xy, r3.wwww, r5.xyxx
                          dp2 r3.w, r5.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r3.w, null, r3.w
                          mul r3.w, r3.w, l(43758.546875)
                          frc r3.w, r3.w
                          mov r3.w, r3.w
                          add r4.w, r4.w, r5.z
                          add r4.w, r5.w, r4.w
                          add r3.w, r3.w, r4.w
                          div r3.z, r3.w, l(4.000000)
                          mov r3.z, r3.z
                        else 
                          mov r5.x, r3.x
                          mov r5.y, l(0.500000)
                          add r4.zw, r4.zzzz, r5.xxxy
                          frc r3.w, cb0[4].x
                          mul r5.x, r3.w, l(0.070000)
                          add r5.xy, r4.zwzz, r5.xxxx
                          dp2 r5.x, r5.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r5.x, null, r5.x
                          mul r5.x, r5.x, l(43758.546875)
                          frc r5.x, r5.x
                          mov r5.x, r5.x
                          mul r5.y, r3.w, l(0.110000)
                          add r5.yz, r4.zzwz, r5.yyyy
                          dp2 r5.y, r5.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r5.y, null, r5.y
                          mul r5.y, r5.y, l(43758.546875)
                          frc r5.y, r5.y
                          mov r5.y, r5.y
                          mul r5.z, r3.w, l(0.130000)
                          add r5.zw, r4.zzzw, r5.zzzz
                          dp2 r5.z, r5.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r5.z, null, r5.z
                          mul r5.z, r5.z, l(43758.546875)
                          frc r5.z, r5.z
                          mov r5.z, r5.z
                          mul r5.w, r3.w, l(0.170000)
                          add r6.xy, r4.zwzz, r5.wwww
                          dp2 r5.w, r6.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r5.w, null, r5.w
                          mul r5.w, r5.w, l(43758.546875)
                          frc r5.w, r5.w
                          mov r5.w, r5.w
                          mul r6.x, r3.w, l(0.190000)
                          add r6.xy, r4.zwzz, r6.xxxx
                          dp2 r6.x, r6.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r6.x, null, r6.x
                          mul r6.x, r6.x, l(43758.546875)
                          frc r6.x, r6.x
                          mov r6.x, r6.x
                          mul r6.y, r3.w, l(0.230000)
                          add r6.yz, r4.zzwz, r6.yyyy
                          dp2 r6.y, r6.yzyy, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r6.y, null, r6.y
                          mul r6.y, r6.y, l(43758.546875)
                          frc r6.y, r6.y
                          mov r6.y, r6.y
                          mul r6.z, r3.w, l(0.290000)
                          add r6.zw, r4.zzzw, r6.zzzz
                          dp2 r6.z, r6.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r6.z, null, r6.z
                          mul r6.z, r6.z, l(43758.546875)
                          frc r6.z, r6.z
                          mov r6.z, r6.z
                          mul r3.w, r3.w, l(0.310000)
                          add r4.zw, r3.wwww, r4.zzzw
                          dp2 r3.w, r4.zwzz, l(12.989800, 78.233002, 0.000000, 0.000000)
                          sincos r3.w, null, r3.w
                          mul r3.w, r3.w, l(43758.546875)
                          frc r3.w, r3.w
                          mov r3.w, r3.w
                          add r4.z, r5.y, r5.x
                          add r4.z, r5.z, r4.z
                          add r4.z, r5.w, r4.z
                          add r4.z, r6.x, r4.z
                          add r4.z, r6.y, r4.z
                          add r4.z, r6.z, r4.z
                          add r3.w, r3.w, r4.z
                          div r3.z, r3.w, l(8.000000)
                          mov r3.z, r3.z
                        endif 
                      endif 
                    endif 
                    ge r3.w, r3.z, r2.y
                    movc r3.w, r3.w, l(1.000000), l(0)
                    ge r3.z, r0.z, r3.z
                    movc r3.z, r3.z, l(1.000000), l(0)
                    mul r3.z, r3.z, r3.w
                    add r4.x, r3.z, r4.x
                    iadd r4.y, r4.y, l(1)
                  endloop 
                  div r0.x, r4.x, r0.w
                  mul r0.x, r0.y, r0.x
                  div r0.y, r3.y, r2.z
                  ge r0.y, r0.x, r0.y
                  movc r0.y, r0.y, l(1.000000), l(0)
                  mov r0.z, l(-0.001250)
                  add r0.z, r0.z, r3.y
                  div r0.z, r0.z, r2.z
                  ge r0.z, r0.x, r0.z
                  movc r0.z, r0.z, l(1.000000), l(0)
                  add r0.w, r3.y, l(0.001667)
                  div r0.w, r0.w, r2.z
                  ge r0.x, r0.x, r0.w
                  movc r0.x, r0.x, l(1.000000), l(0)
                  mul r0.y, r0.y, l(0.500000)
                  add r0.y, r0.z, r0.y
                  mov r0.x, -r0.x
                  add r0.x, r0.x, r0.y
                  add r1.z, r0.x, l(0.125000)
                endif 
                mov r0.x, l(-0.250000)
                add r0.x, r0.x, r1.x
                mov r0.y, -r0.x
                max r0.x, r0.y, r0.x
                lt r0.x, r0.x, l(0.002000)
                if_nz r0.x
                  mov r1.z, l(0)
                endif 
                mov r0.x, l(-0.500000)
                add r0.x, r0.x, r1.x
                mov r0.y, -r0.x
                max r0.x, r0.y, r0.x
                lt r0.x, r0.x, l(0.002000)
                if_nz r0.x
                  mov r1.z, l(0)
                endif 
                mov r0.x, l(-0.750000)
                add r0.x, r0.x, r1.x
                mov r0.y, -r0.x
                max r0.x, r0.y, r0.x
                lt r0.x, r0.x, l(0.002000)
                if_nz r0.x
                  mov r1.z, l(0)
                endif 
                mov r0.x, l(-0.250000)
                add r0.x, r0.x, r1.y
                mov r0.y, -r0.x
                max r0.x, r0.y, r0.x
                lt r0.x, r0.x, l(0.002000)
                if_nz r0.x
                  mov r1.z, l(0)
                endif 
                mov o0.xyz, r1.zzzz
                mov o0.w, l(1.000000)
                ret 
                // Approximately 409 instruction slots used
                            
            };
        }

    }

}

